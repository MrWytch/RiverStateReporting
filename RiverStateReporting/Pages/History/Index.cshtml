@page
@model RiverStateReporting.Pages.History.IndexModel
@{
    ViewData["Title"] = "History";
}

<h2 class="text-center mt-3">Measurements History</h2>

<div class="container">
    <form method="get" class="bg-light bg-opacity-75 mt-4 rounded p-4">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="RiverFilter">Filter by River:</label>
                    <select class="form-control" id="RiverFilter" name="RiverFilter" asp-items="@(new SelectList(Model.Rivers))">
                        <option value="">All Rivers</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="TitleFilter">Filter by Station Title:</label>
                    <select class="form-control" id="TitleFilter" name="TitleFilter" asp-items="@(new SelectList(Model.Titles))">
                        <option value="">All Titles</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="StartDate">From:</label>
                    <input type="date" class="form-control" id="StartDate" name="StartDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")">
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="EndDate">To:</label>
                    <input type="date" class="form-control" id="EndDate" name="EndDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")">
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Filter</button>
    </form>

    <table class="table table-hover bg-light bg-opacity-75 mt-4 rounded">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>River</th>
                <th>Station</th>
                <th>Water level (cm)</th>
                <th>Timestamp</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Values)
            {
                <tr class="@(item.Val < item.Station.DroughtLevel ? "table-warning" : item.Val > item.Station.FloodLevel ? "table-danger" : "")">
                    <td>@item.Id</td>
                    <td>@item.Station.River</td>
                    <td>@item.Station.Title</td>
                    <td>@item.Val</td>
                    <td>@item.TimeStamp.ToString("dd.MM.yyyy HH:mm")</td>
                    @if (item.Val < item.Station.DroughtLevel)
                    {
                        <td>Drought</td>
                    }
                    else if (item.Val > item.Station.FloodLevel)
                    {
                        <td>Flood</td>
                    }else
                    {
                        <td>Normal</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    @if (!Model.Values.Any())
    {
        <div class="alert alert-info">No measurements found.</div>
    }
</div>
